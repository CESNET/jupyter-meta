# https://github.com/tianon/docker-brew-ubuntu-core/commit/d4313e13366d24a97bd178db4450f63e221803f1
#ARG BASE_IMAGE=ubuntu:bionic-20191029@sha256:6e9f67fa63b0323e9a1e587fd71c561ba48a034504fb804fd26fd8800039835d
ARG BASE_IMAGE=ubuntu:18.04
FROM $BASE_IMAGE 

USER root

ENV DEBIAN_FRONTEND noninteractive

RUN apt-get -y update \
 && apt-get -y upgrade \
 && apt-get -y install -yq --no-install-recommends \ 
    apt-utils \
    sudo \
    wget \
    git \
    nano \
    bzip2 \
    krb5-user \
    libpam-krb5 \
    libapache2-mod-auth-openidc \ 
    libcjose0 \
    build-essential \
    ca-certificates \
    locales \
    python3-dev \
    python3-pip \
    python3-pycurl \
    nodejs \
    npm \
    libpython3.7 \
    libkafs0-heimdal \
    libtcl8.6 \
    libtk8.6 \
    libedit2 \
    chrony \
    systemd \
    nfs-common \
    openssh-client \
    openssh-server \
 && apt-get purge \
 && apt-get clean \
 && rm -rf /var/lib/apt/lists/*

ENV SHELL=/bin/bash \
    LC_ALL=en_US.UTF-8 \
    LANG=en_US.UTF-8 \
    LANGUAGE=en_US.UTF-8

#RUN service rpcbind start \
# && service ssh start \
# && service nfs-common start; exit 0

RUN locale-gen $LC_ALL

RUN timedatectl set-timezone Europe/Prague; exit 0

RUN mkdir -p /src/jupyterhub/
#COPY . /src/jupyterhub/
#ADD . /src/jupyterhub/
#ADD and COPY do the thing apparently, both copy source from host to pods destination
WORKDIR /src/jupyterhub

# always make sure pip is up to date!
RUN python3 -m pip install --no-cache --upgrade wheel setuptools pip

#RUN apt remove -y nodejs npm &&  npm install -g npm@latest

#RUN apt update && apt install curl && curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.35.3/install.sh | bash

RUN npm install -g n \
 && export PATH="/usr/local/bin/node:$PATH" \
 && n 16 \
 && export PATH="/usr/local/bin/node:$PATH" \
 && npm install -g npm 

RUN npm install -g configurable-http-proxy \
 && rm -rf ~/.npm

# && hash -d npm \

# Build client component packages (they will be copied into ./share and
# packaged with the built wheel.)
#RUN npm install
#RUN python3 -m pip wheel --wheel-dir wheelhouse .
# && pip install batchspawner \
#RUN pip install jupyterhub \
# && pip install notebook \
# && rm -rf ~/.cache ~/.npm 
#$PWD  

#RUN pip install git+git://github.com/jupyterhub/jupyterhub.git
RUN pip install jupyterhub
#RUN pip install git+git://github.com/jupyter/notebook.git
RUN pip install notebook

LABEL maintainer="Jupyter Project <jupyter@googlegroups.com>"
LABEL org.jupyter.service="jupyterhub"

RUN useradd -rm -d /home/test -s /bin/bash -g root -G sudo -u 1000 test -p "$(openssl passwd -1 test)"
RUN useradd -rm -d /home/nikl -s /bin/bash -g root -G sudo -u 1001 nikl -p "$(openssl passwd -1 nikl)"
RUN useradd -rm -d /home/ruda -s /bin/bash -g root -G sudo -u 1002 ruda -p "$(openssl passwd -1 ruda)"
#RUN useradd -rm -d /home/ljocha -s /bin/bash -g root -G sudo -u 1003 ljocha -p "$(openssl passwd -1 ljocha)"
#RUN useradd -rm -d /home/cejkat -s /bin/bash -g root -G sudo -u 1004 cejkat -p "$(openssl passwd -1 cejkat)"

RUN wget https://metavo.metacentrum.cz/krb5.conf && \
    cp krb5.conf /etc/krb5.conf

COPY pbs pbs
#RUN dpkg -i pbs/libpython3.7-minimal_3.7.5-2~18.04_amd64.deb && apt-get install -f -y
#RUN dpkg -i pbs/libpython3.7-stdlib_3.7.5-2~18.04_amd64.deb && apt-get install -f -y
#RUN dpkg -i pbs/libpython3.7_3.7.5-2~18.04_amd64.deb && apt-get install -f -y
RUN dpkg -i pbs/libtinfo6_6.1+20190803-1ubuntu1_amd64.deb && apt-get install -f -y
RUN dpkg -i pbs/libncurses6_6.1+20190803-1ubuntu1_amd64.deb && apt-get install -f -y
#RUN dpkg -i pbs/libkafs0-heimdal_1.6~rc2+dfsg-9+zs4_amd64.deb && apt-get install -f -y
#RUN dpkg -i pbs/libtcl8.6_8.6.8+dfsg-3_amd64.deb && apt-get install -f -y
#RUN dpkg -i pbs/libtk8.6_8.6.8-4_amd64.deb && apt-get install -f -y
RUN dpkg -i pbs/libpbspro_19.0.0-20+deb10_amd64.deb && apt-get install -f -y
RUN dpkg -i pbs/pbspro-client_19.0.0-20+deb10_amd64.deb && apt-get install -f -y

COPY jupyter.key jupyter.key
COPY jupyter.pem jupyter.pem
#COPY jupyter-unsigned.key jupyter-unsigned.key
#COPY jupyter-unsigned.crt jupyter-unsigned.crt

#RUN git clone https://github.com/jupyterhub/batchspawner.git
#COPY batchspawner.py /src/jupyterhub/batchspawner/batchspawner/batchspawner.py
#RUN cd batchspawner && pip install -e . && cd ..
#COPY batchspawner.py /usr/local/lib/python3.6/dist-packages/batchspawner/batchspawner.py
RUN pip install git+https://github.com/jupyterhub/batchspawner.git

#RUN git clone https://github.com/jupyterhub/wrapspawner.git
#RUN cd wrapspawner && pip install -e . && cd ..
RUN pip install git+https://github.com/jupyterhub/wrapspawner.git

#RUN pip install git+https://github.com/jupyterhub/kubespawner.git

RUN git clone https://github.com/root-project/cling.git \
 && cd cling/tools/Jupyter/kernel && pip install -e . \
 && jupyter-kernelspec install cling-cpp17 \
 && jupyter-kernelspec install cling-cpp11 \
 && jupyter-kernelspec install cling-cpp14 \
 && jupyter-kernelspec install cling-cpp1z

RUN pip install git+https://github.com/andreinechaev/nvcc4jupyter.git

COPY jupyterhub-options-spawner/ /src/jupyterhub/jupyterhub-options-spawner/
RUN cd jupyterhub-options-spawner/ && pip install --no-deps .


# PAM_KRB5CCNAME is not set when opening the session for some reason and so we have to
# explicitly retain the cache created during auth instead.
# Also, turn on pam debug logging
RUN sed -i 's$1000$1000 ccache=/tmp/krb5cc_%u retain_after_close debug$' /etc/pam.d/common-auth
RUN sed -i 's$1000$1000 debug$' /etc/pam.d/common-session

#RUN wget -q https://repo.continuum.io/miniconda/Miniconda3-4.3.27-Linux-x86_64.sh -O /tmp/miniconda.sh  && \
#    echo 'f0f385b9abce0d47ee09c05480feb6cf */tmp/miniconda.sh' | md5sum -c - && \
#    bash /tmp/miniconda.sh -f -b -p /opt/conda && \
#    /opt/conda/bin/conda install --yes -c conda-forge \
#      python=3.6 notebook xeus-cling && \
#    /opt/conda/bin/pip install --upgrade pip && \
#    rm /tmp/miniconda.sh
#ENV PATH=/opt/conda/bin:$PATH

#COPY fstab /etc/fstab
#RUN mkdir -p /storage && cd /storage && mkdir -p brno10-ceitec-hsm brno6 liberec3-tul praha4-fzu brno11-elixir brno7-cerit ostrava1 praha5-elixir brno12-cerit brno8 ostrava2-archive praha6-fzu brno1-cerit brno9-ceitec plzen1 projects brno2 budejovice1 plzen3-kky pruhonice1-ibot brno3-cerit du-cesnet plzen4-ntis software brno4-cerit-hsm jihlava1-cerit praha1
#RUN modprobe nfs
#COPY krb5.keytab /etc/krb5.keytab
#RUN mount -a

CMD ["jupyterhub", "--generate-config"]

COPY kerberosPAM.py kerberosPAM.py
RUN cat kerberosPAM.py >> jupyterhub_config.py

COPY pbs.conf /etc/pbs.conf

COPY qstat-merge.sh qstat-merge.sh
RUN chmod +x qstat-merge.sh

#COPY homes.tar homes.tar
#COPY passwd /etc/passwd
#COPY group /etc/group

#RUN tar -xf homes.tar -C /
#RUN for i in /home/*; do USER=$(echo $i | awk -F '/' '{print $3}'); chown -R $USER:meta $i; done

EXPOSE 443
EXPOSE 8081
EXPOSE 8082
EXPOSE 88/udp

RUN /usr/bin/yes | pip uninstall jupyterhub && pip install jupyterhub==1.4.1
RUN /usr/bin/yes | pip uninstall batchspawner && pip install batchspawner==1.1.0
RUN /usr/bin/yes | pip uninstall wrapspawner && pip install wrapspawner==1.0.0

#RUN for i in {1..999999999}; do cmp --silent /etc/passwd /src/jupyterhub/passwd-copy.txt || cat /src/jupyterhub/passwd-copy.txt > /etc/passwd ; sleep 600; done &

RUN pip install tornado==5.1.1

COPY config.py config.py
RUN cat config.py >> jupyterhub_config.py
#kubernetes sets default hostname at 'kubectl run...' to the pod name, which we 
#dont want, however hostname command is blocked 
#RUN hostname -b jupyter.cloud.metacentrum.cz

#generate these cert and key by
#sudo certbot certonly --standalone -d jupyter.cloud.metacentrum.cz
COPY fullchain.pem fullchain.pem
COPY privkey.pem privkey.pem

EXPOSE 8443
#CMD ["jupyterhub"]
CMD ["jupyterhub", "--ssl-key", "privkey.pem", "--ssl-cert", "fullchain.pem"]
